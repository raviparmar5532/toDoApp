package com.example.demo.Person;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Project.Project;
import com.example.demo.Task.Task;

@RestController
public class personController {
	@Autowired
	private PersonService personService;
	@GetMapping(value = "persons")
	public List<Person>getAllPerson() {
		return personService.getAllPerson().stream().map(p -> p.getPersonId());
	}
	@GetMapping(value = "persons/{id}")
	public String getPersonById(@PathVariable("id") Integer id) {
		return personService.getPersonById(id);
	}
	@PostMapping(value = "persons/add") 
	public String addPerson(@RequestBody Person P) {
		return personService.addPerson(P);
	}
	@DeleteMapping(value = "persons/delete/{id}") 
	private String deleteById(@PathVariable("id") Integer id) {
		return personService.deleteById(id);
	}
	@PatchMapping(value = "persons/addTask/{id}")
	public String addTask(@PathVariable("id") Integer id, @RequestBody Task T) {
		return personService.addTask(id, T);
	}
	@GetMapping(value = "persons/{id}/tasks")
	public List<Task>getTasks(@PathVariable("id") Integer id) {
		return personService.getTasks(id);
	}
	@PatchMapping(value = "persons/{id}/delete/{name}")
	public String deleteTask(@PathVariable("id") Integer id, @PathVariable("name") String name) {
		return personService.deleteTask(id, name);
	}
	@PatchMapping(value = "persons/addProject/{id}")
	public String addProject(@PathVariable("id") Integer personId, @RequestBody Project P) {
		return personService.assignProject(personId, P);
	}
	@GetMapping(value = "persons/{id}/projects")
	public List<Project> getAssignedProjects(@PathVariable("id") Integer id) {
		return personService.getProjects(id);
	}
	@PatchMapping(value = "persons/{personId}/deleteProject/{projectId}")
	public String deleteProject(@PathVariable("personId") Integer personId, @PathVariable("projectId") Integer projectId) {
		return personService.removeProject(personId, projectId);
	}
}
